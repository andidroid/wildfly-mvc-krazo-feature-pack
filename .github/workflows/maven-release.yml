# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Release

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache Maven packages
        uses: actions/cache@v3
        env:
          cache-name: cache-maven-modules
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Commit new version to GitHub and create tag
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          mvn release:prepare -B -DautoVersionSubmodules=true -DskipTests=true
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Publish to GitHub Packages Apache Maven
        run: mvn release:perform -B -DskipTests=true -Dgoals=deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Read Version
        run: |
          cd /home/runner/work/wildfly-mvc-krazo-feature-pack/wildfly-mvc-krazo-feature-pack/target/checkout
          echo -n "VERSION=" >> $GITHUB_ENV
          mvn help:evaluate -Dexpression=project.version -q -DforceStdout >> $GITHUB_ENV
          cat $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Versionn ${{ env.VERSION }}
            Ref ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload_release_asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /home/runner/work/wildfly-mvc-krazo-feature-pack/wildfly-mvc-krazo-feature-pack/target/checkout/target/wildfly-mvc-krazo-feature-pack-${{ env.VERSION }}.zip
          asset_name: wildfly-mvc-krazo-feature-pack.zip
          asset_content_type: application/zip
